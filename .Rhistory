shiny::runApp()
# This part count the number of emails a sender has
top_senders <- message %>%
count(sender, sort = TRUE)
# Join the status information with the email address (correspond to the profession of the employee)
top_senders <- top_senders %>%
left_join(employeelist, by = c("sender" = "Email_id")) %>%
mutate(
label = ifelse(!is.na(status),
paste0(sender, " (", status, ")"),
sender)
)
# Plot this information
top_senders %>%
slice_max(n, n = 20) %>%
ggplot(aes(x = reorder(label, n), y = n)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(
title = "Top 20 employees by number of emails sent",
x = "Sender and job title",
y = "Number of Emails"
) +
theme_minimal() +
theme(axis.text.y = element_text(size = 9))
#Loading of the database. Please replace my_path value with the path of your file. Use a local emplacement to store it, One Drive users may occur errors. Otherwise just access and clone the repo : https://github.com/Jacquart08/EnronMail_R_ShinyApp
my_path <- "C:/Users/CM_LAPTOP/Downloads/Enron.Rdata"
load(my_path)
# Load required packages
library(dplyr)
library(ggplot2)
#Loading of the database. Please replace my_path value with the path of your file. Use a local emplacement to store it, One Drive users may occur errors. Otherwise just access and clone the repo : https://github.com/Jacquart08/EnronMail_R_ShinyApp
my_path <- "C:/Users/CM_LAPTOP/Downloads/Enron.Rdata"
load(my_path)
# Load required packages
library(dplyr)
library(ggplot2)
View(employeelist)
View(employeelist)
View(employeelist)
str(employeelist)
str(message)
str(recipientinfo)
str(referenceinfo)
View(message)
View(message)
View(recipientinfo)
# This part count the number of emails a sender has
top_senders <- message %>%
count(sender, sort = TRUE)
# Join the status information with the email address (correspond to the profession of the employee)
top_senders <- top_senders %>%
left_join(employeelist, by = c("sender" = "Email_id")) %>%
mutate(
label = ifelse(!is.na(status),
paste0(sender, " (", status, ")"),
sender)
)
# Plot this information
top_senders %>%
slice_max(n, n = 20) %>%
ggplot(aes(x = reorder(label, n), y = n)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(
title = "Top 20 employees by number of emails sent",
x = "Sender and job title",
y = "Number of Emails"
) +
theme_minimal() +
theme(axis.text.y = element_text(size = 9))
runApp()
# This part count the number of emails a sender has
top_senders <- message %>%
count(sender, sort = TRUE)
# Join the status information with the email address (correspond to the profession of the employee)
top_senders <- top_senders %>%
left_join(employeelist, by = c("sender" = "Email_id")) %>%
mutate(
label = ifelse(!is.na(status),
paste0(sender, " (", status, ")"),
sender)
)
# Plot this information
top_senders %>%
slice_max(n, n = 20) %>%
ggplot(aes(x = reorder(label, n), y = n)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(
title = "Top 20 employees by number of emails sent",
x = "Sender and job title",
y = "Number of Emails"
) +
theme_minimal() +
theme(axis.text.y = element_text(size = 9))
